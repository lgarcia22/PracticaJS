@using DataEntityLayer.Models.Informes;
@using DataAccessLayer.Util;
@{
    bool solicitudPaVisible = ViewBag.isDetallarSolicitudPa;
    bool isFechasVencimiendo = ViewBag.urlMenu == UtilClass.bandejaNotificado ? true : false;
    bool presentacionPaVisible = ViewBag.presentacionPaVisible;
}

<div id="GridInformeAuditoria">
    @(Html.DevExtreme().DataGrid<InformeAuditoriaModel>().DataSource(ds => ds
                                                            .Mvc()
                                                            .Controller("InformeAuditoria")
                                                            .LoadAction("GetInformeAuditoria")
                                                            .LoadParams(new { urlMenu = ViewBag.urlMenu })
                                                            .Key("codigoInformeAuditoria"))
                                                            .ID("GridInformeAuditoria")
                                                            .Columns(columns =>
                                                            {
                                                                columns.AddFor(m => m.codigoInformeAuditoriaEncriptado).AllowHiding(true);
                                                                columns.AddFor(m => m.codigoInformeAuditoria).Visible(false).Width(80);
                                                                columns.AddFor(m => m.numeroInforme).Visible(true).Width(80);
                                                                columns.AddFor(m => m.numeroOficioRemision).Visible(true).Width(100);
                                                                columns.AddFor(m => m.entidad).Visible(true).Width(170);
                                                                //columns.AddFor(m => m.codigoEntidad).Visible(true).Lookup(lkup => lkup
                                                                //                .DataSource(ds => ds
                                                                //                .Mvc().Controller("Catalogo")
                                                                //                .LoadAction("GetEntidadFiscalizadaInforme")
                                                                //                .Key("codigoEntidad"))
                                                                //                .ValueExpr("codigoEntidad")
                                                                //                .DisplayExpr("nombre")).Width(170);
                                                                columns.AddFor(m => m.tema).Visible(true).Width(160);
                                                                columns.AddFor(m => m.rubro).Visible(true).Width(160);
                                                                columns.AddFor(m => m.fuenteFinanciera).Visible(true).Width(150);
                                                                //columns.AddFor(m => m.codigoFuenteFinanciera)
                                                                //                .Lookup(lkup => lkup
                                                                //                .DataSource(ds => ds
                                                                //                .Mvc().Controller("Catalogo")
                                                                //                .LoadAction("GetFuente")
                                                                //                .Key("codigoFuenteFinanciera"))
                                                                //                .ValueExpr("codigoFuenteFinanciera")
                                                                //                .DisplayExpr("descripcion")).Width(150);
                                                                columns.AddFor(m => m.fechaInicio).DataType(GridColumnDataType.Date).Format("dd/MM/yyyy").Visible(true).Width(150);
                                                                columns.AddFor(m => m.fechaFin).DataType(GridColumnDataType.Date).Format("dd/MM/yyyy").Visible(true).Width(150);
                                                                columns.AddFor(m => m.entidadAuditora).Visible(true).Width(150);
                                                                //columns.AddFor(m => m.codigoEntidadAuditora).Visible(true)
                                                                //                .Lookup(lkup => lkup
                                                                //                .DataSource(ds => ds
                                                                //                .Mvc().Controller("Catalogo")
                                                                //                .LoadAction("GetEntidadAuditora")
                                                                //                .Key("codigoEntidad"))
                                                                //                .ValueExpr("codigoEntidad")
                                                                //                .DisplayExpr("descripcion")).Width(150);
                                                                columns.AddFor(m => m.departamento).Visible(true).Width(150);
                                                                columns.AddFor(m => m.municipio).Visible(true).Width(150);
                                                                //columns.AddFor(m => m.codigoGeografico).Visible(true)
                                                                //                .Lookup(lkup => lkup
                                                                //                .DataSource(ds => ds
                                                                //                .Mvc().Controller("Catalogo")
                                                                //                .LoadAction("GetDepartamento")
                                                                //                .Key("codigoGeografico"))
                                                                //                .ValueExpr("codigoGeografico")
                                                                //                .DisplayExpr("nombre")).Width(150);
                                                                //columns.AddFor(m => m.codigoGeograficoMunicipio).Visible(true)
                                                                //                .Lookup(lkup => lkup
                                                                //                .DataSource(ds => ds
                                                                //                .Mvc().Controller("Catalogo")
                                                                //                .LoadAction("GetMunicipioGrid")
                                                                //                .Key("codigoGeograficoMunicipio"))
                                                                //                .ValueExpr("codigoGeografico")
                                                                //                .DisplayExpr("nombre")).Width(150);
                                                                columns.AddFor(m => m.estado).Visible(true).Width(150);
                                                                columns.AddFor(m => m.codigoOrganigrama).Visible(true).Width(150);
                                                                columns.AddFor(m => m.fechaHoraCreacion).DataType(GridColumnDataType.Date).Format("dd/MM/yyyy").Visible(false).Width(150);
                                                                columns.AddFor(m => m.usuarioCreacion).Visible(false).Width(150);
                                                                columns.AddFor(m => m.usuarioAuditor).Visible(false).Width(150);
                                                                columns.AddFor(m => m.fechaIngreso).DataType(GridColumnDataType.Date).Format("dd/MM/yyyy").Visible(false).Width(150);
                                                                columns.AddFor(m => m.fechaVen1).DataType(GridColumnDataType.Date).Format("dd/MM/yyyy").Visible(isFechasVencimiendo).MinWidth(150);
                                                                columns.AddFor(m => m.fechaVen2).DataType(GridColumnDataType.Date).Format("dd/MM/yyyy").Visible(isFechasVencimiendo).MinWidth(150);
                                                                columns.AddFor(m => m.fechaVen3).DataType(GridColumnDataType.Date).Format("dd/MM/yyyy").Visible(isFechasVencimiendo).MinWidth(150);
                                                                //columns.AddFor(m => m.codigoEstado).Visible(true)
                                                                //                .Lookup(lkup => lkup
                                                                //                .DataSource(ds => ds
                                                                //                .Mvc().Controller("Catalogo")
                                                                //                .LoadAction("GetEstadoInformeAuditoria")
                                                                //                .Key("codigoEstado"))
                                                                //                .ValueExpr("codigoEstadoProceso")
                                                                //                .DisplayExpr("estadoProceso")).Width(150);
                                                            })
                                                            .ShowBorders(true)
                                                            .SearchPanel(p => p.Visible(true).Width(210).Placeholder("Buscar..."))
                                                            .Paging(paging => paging.PageSize(10))
                                                            .FilterRow(f => f.Visible(true))
                                                            .HeaderFilter(h => h.Visible(true))
                                                            .ShowColumnLines(true)
                                                            .ShowRowLines(true)
                                                            .RowAlternationEnabled(true)
                                                            .HoverStateEnabled(true)
                                                            .Pager(pager =>
                                                            {
                                                                pager.ShowPageSizeSelector(true);
                                                                pager.AllowedPageSizes(new List<int> { 5, 10, 20 });
                                                                pager.ShowInfo(true);
                                                                pager.Visible(true);
                                                            }
                                                            )
                                                            .OnRowDblClick("DetallarInformeAuditoria")
                                                            .ColumnResizingMode(ColumnResizingMode.Widget)
                                                            .AllowColumnReordering(true)
                                                            .AllowColumnResizing(true)
                                                            .Selection(s => s.Mode(SelectionMode.Single))
                                                            .ColumnHidingEnabled(true)
                                                            .NoDataText("No hay información")
                                                            .ColumnChooser(c => c.Enabled(true).AllowSearch(true))
                                                            .ColumnFixing(c => c.Enabled(true))
                                                            .OnSelectionChanged("SelectionChangedInformeAuditoria")
                                                            .Scrolling(scrolling => scrolling.ColumnRenderingMode(GridColumnRenderingMode.Virtual))
                                                            .Export(e => e.Enabled(true).AllowExportSelectedData(true))
                                                            .OnExporting("Exporting")
                                                            .WordWrapEnabled(true)
                                                            .Toolbar(toolbar =>
                                                            {
                                                                toolbar.Items(items =>
                                                                {

                                                                    items.Add()
                                                                        .Location(ToolbarItemLocation.Before)
                                                                        .LocateInMenu(ToolbarItemLocateInMenuMode.Auto)
                                                                        .Widget(w =>
                                                                            w.Button()
                                                                                .Icon("plus")
                                                                                .Text("Crear")
                                                                                .ID("BtnAgregarInforme")
                                                                                .OnClick("AbrirPopAgregarInforme")
                                                                                .Visible(ViewBag.isBtnCrear)
                                                                        );
                                                                    items.Add()
                                                                        .Location(ToolbarItemLocation.Before)
                                                                        .LocateInMenu(ToolbarItemLocateInMenuMode.Auto)
                                                                        .Widget(w =>
                                                                            w.Button()
                                                                                .Icon("rename")
                                                                                .Text("Detallar")
                                                                                .ID("BtnDetallarInforme")
                                                                                .OnClick("DetallarInformeAuditoria")
                                                                                .Disabled(true)
                                                                                .Visible(ViewBag.isDetallar)
                                                                        );
                                                                    items.Add()
                                                                        .Location(ToolbarItemLocation.Before)
                                                                        .LocateInMenu(ToolbarItemLocateInMenuMode.Auto)
                                                                        .Widget(w =>
                                                                            w.Button()
                                                                                .Text("Enviar a Notificar")
                                                                                .Icon("check")
                                                                                .ID("btnNotificar")
                                                                                .Visible(ViewBag.isBtnEnviarNot)
                                                                                .OnClick("AbrirPopEnviarNotInforme")
                                                                                .Disabled(true)
                                                                        );

                                                                    items.Add()
                                                                        .Location(ToolbarItemLocation.Before)
                                                                        .LocateInMenu(ToolbarItemLocateInMenuMode.Auto)
                                                                        .Widget(w =>
                                                                            w.Button()
                                                                                .Text("Reversar Envió a Notificar")
                                                                                .ID("btnReversarNotificacion")
                                                                                .Icon("revert")
                                                                                .Visible(ViewBag.isBtnReversarNot)
                                                                                .OnClick("ReversarEnvioNotificar")
                                                                                .Disabled(true)
                                                                        );
                                                                    items.Add()
                                                                        .Location(ToolbarItemLocation.Before)
                                                                        .LocateInMenu(ToolbarItemLocateInMenuMode.Auto)
                                                                        .Widget(w =>
                                                                            w.Button()
                                                                               .Text("Abrir Reporte")
                                                                               .ID("btnAbrirReporte")
                                                                               .Icon("far fa-file-pdf")
                                                                               .OnClick("AbrirReporteInforme")
                                                                               .Visible(ViewBag.isBtnAbrirReporte)
                                                                               .Disabled(true)
                                                                        );
                                                                    items.Add()
                                                                       .Location(ToolbarItemLocation.Before)
                                                                       .LocateInMenu(ToolbarItemLocateInMenuMode.Auto)
                                                                       .Widget(w =>
                                                                           w.Button()
                                                                               .Icon("fa-solid fa-eye")
                                                                               .Text("Solicitud")
                                                                               .ID("BtnSolicitudPlanAccion")
                                                                               .OnClick("SolicitudPlanAccion")
                                                                               .Disabled(true)
                                                                               .Visible(solicitudPaVisible)
                                                                       );
                                                                    items.Add()
                                                                      .Location(ToolbarItemLocation.Before)
                                                                      .LocateInMenu(ToolbarItemLocateInMenuMode.Auto)
                                                                      .Widget(w =>
                                                                          w.Button()
                                                                              .Icon("textdocument")
                                                                              .Text("Registro Presentación")
                                                                              .ID("BtnDetallarPresentacionPa")
                                                                              .OnClick("PresentacionPlanAccion")
                                                                              .Disabled(true)
                                                                              .Visible(presentacionPaVisible)
                                                                      );
                                                                    items.Add().Location(ToolbarItemLocation.After)
                                                                        .LocateInMenu(ToolbarItemLocateInMenuMode.Auto)
                                                                        .Widget(w =>
                                                                                w.Button()
                                                                                .ID("Refrescar")
                                                                                .Icon("refresh")
                                                                                .Hint("Refrescar")
                                                                                .Text("")
                                                                                .OnClick("RefreshGridInformeAuditoria"));
                                                                    items.Add()
                                                                        .Location(ToolbarItemLocation.After)
                                                                        .Widget(w =>
                                                                            w.Button()
                                                                                .ID("exportCSV")
                                                                                .Icon("export")
                                                                                .Hint("Exportar CSV")
                                                                                .Text("")
                                                                                .OnClick("ExportToCsvInformeA")
                                                                        );
                                                                    items.Add()
                                                                        .Location(ToolbarItemLocation.After)
                                                                        .Widget(w =>
                                                                            w.Button()
                                                                                .ID("exportPDF")
                                                                                .Icon("pdffile")
                                                                                .Hint("Exportar PDF")
                                                                                .Text("")
                                                                                .OnClick("ExportToPdfInformeA")
                                                                        );
                                                                    items.Add().Name("exportButton").LocateInMenu(ToolbarItemLocateInMenuMode.Auto);
                                                                    items.Add().Name("columnChooserButton")
                                                                            .LocateInMenu(ToolbarItemLocateInMenuMode.Auto);
                                                                    items.Add().Name("searchPanel").Location(ToolbarItemLocation.After).LocateInMenu(ToolbarItemLocateInMenuMode.Auto);
                                                                });
                                                            })

    )
</div>