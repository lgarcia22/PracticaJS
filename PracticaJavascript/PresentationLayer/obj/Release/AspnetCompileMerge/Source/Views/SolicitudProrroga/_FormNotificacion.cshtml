@using DataEntityLayer.Models.Notificaciones;
@using DataAccessLayer.Util;
@model NotificacionModel
@{ 
    bool camposSoloLectura = true;
    bool visibleCrear = true;

    if(Model.codigoNotificacion == 0) {
        visibleCrear = false;
        camposSoloLectura = false;
    }
    else{
        camposSoloLectura = true;
    }
}

<div class="row " style="padding: 10px;">
    <div class="col-lg-12">
        @(Html.DevExtreme().Form<NotificacionModel>()
                                                            .ID("FormNotificacion")
                                                            .ColCount(3)
                                                            .FormData(Model)
                                                            .LabelLocation(FormLabelLocation.Left)
                                                            .ShowColonAfterLabel(true)
                                                            .LabelMode(FormLabelMode.Outside)
                                                            .Items(items =>
                                                            {
                                                                items.AddGroup()
                                                                .Items(groupItems =>
                                                                {
                                                                    groupItems.AddSimpleFor(m => m.numeroOficio).IsRequired(true)
                                                                            .Editor(e => e.TextBox().ReadOnly(camposSoloLectura).Name("numeroOficio").ID("numeroOficio").MaxLength(50)
                                                                            ).ColSpan(2);
                                                                    groupItems.AddSimpleFor(m => m.fechaOficio).IsRequired(true)
                                                                         .Editor(e => e.DateBox().Type(DateBoxType.Date).Name("fechaOficio").ID("fechaOficio").ReadOnly(camposSoloLectura)
                                                                             ).ColSpan(1);
                                                                    groupItems.AddSimpleFor(m => m.fechaVencimiento)
                                                                           .Editor(e => e.DateBox().Type(DateBoxType.Date).Name("fechaVencimiento").ID("fechaVencimiento").ReadOnly(true)
                                                                               ).ColSpan(1).Visible(visibleCrear);
                                                                    groupItems.AddSimpleFor(m => m.fechaNotificacion)
                                                                           .Editor(e => e.DateBox().Type(DateBoxType.Date).Name("fechaNotificacion").ID("fechaNotificacion").Width(105).ReadOnly(camposSoloLectura)
                                                                               ).ColSpan(1).Visible(false);
                                                                    groupItems.AddSimpleFor(m => m.fechaRecepcion)
                                                                          .Editor(e => e.DateBox().Type(DateBoxType.Date).Name("fechaRecepcion").ID("fechaRecepcion").Width(105).ReadOnly(camposSoloLectura)
                                                                              ).ColSpan(1);
                                     
                                                                }).ColCount(4).ColSpan(3);

                                                                items.AddGroup()
                                                                .Items(groupItems =>
                                                                {
                                                                    groupItems.AddSimpleFor(m => m.numeroIdentidadEntrega)
                                                                           .Editor(e => e.TextBox().Name("numeroIdentidadEntrega").ID("numeroIdentidadEntrega").MaxLength(13).ReadOnly(camposSoloLectura).ReadOnly(camposSoloLectura)
                                                                           ).ColSpan(2);
                                                                    groupItems.AddSimpleFor(m => m.nombreEntrega)
                                                                         .Editor(e => e.TextBox().Name("nombreEntrega").ID("nombreEntrega").MaxLength(100).ReadOnly(camposSoloLectura)
                                                                         ).ColSpan(2);
                                                                }).ColCount(5).ColSpan(3);

                                                                items.AddGroup()
                                                                .Items(groupItems =>
                                                                {
                                                                    groupItems.AddSimpleFor(m => m.numeroIdentidadRecibe).IsRequired(true)
                                                                           .Editor(e => e.TextBox().Name("numeroIdentidadRecibe").ID("numeroIdentidadRecibe").MaxLength(13).ReadOnly(camposSoloLectura)
                                                                           ).ColSpan(2);
                                                                    groupItems.AddSimpleFor(m => m.nombreRecibe).IsRequired(true)
                                                                           .Editor(e => e.TextBox().Name("nombreRecibe").ID("nombreRecibe").MaxLength(100).ReadOnly(camposSoloLectura)
                                                                           ).ColSpan(2);
                                                                    groupItems.AddSimpleFor(m => m.cargoRecibe).IsRequired(true)
                                                                          .Editor(e => e.TextBox().Name("cargoRecibe").ID("cargoRecibe").MaxLength(50).ReadOnly(camposSoloLectura)
                                                                          ).ColSpan(2);
                                                                }).ColCount(5).ColSpan(3);
                                                                items.AddSimpleFor(m => m.observacion).Editor(E => E.TextArea().Height(125)
                                                                .Name("observacion").ID("observacion").MaxLength(500).ReadOnly(camposSoloLectura)).ColSpan(3).Label(l => l.Text("Observación"));

                                                            }).ColCountByScreen(cs => cs.Md(3).Lg(3).Sm(1))
        )
    </div>
</div>
<script src="@Url.Content("~/Scripts/jquery-confirm.min.js")"></script>
<script>

    function GuardarNotificacion() {
        $.confirm({
            title: "Aprobar",
            animation: "zoom",
            closeAnimation: "zoom",
            animateFromElement: false,
            content: '<div>¿Está seguro que desea guardar la solicitud de prórroga? <br></div>',
            type: "orange",
            buttons: {
                confirm: {
                    text: "  Si  ",
                    action: () => {
                        GuardarNotificacionProrroga();
                    }
                }, cancel: {
                    text: "  No  "
                }
            }
        });
    }
    function GuardarNotificacionProrroga()
    {
        MostrarPanelLoad();
        var idFormulario = "#FormNotificacion";
        var form = $(idFormulario).dxForm("instance").option("formData");

        if (form.numeroOficio != null && form.numeroOficio != "" && form.numeroIdentidadRecibe != null && form.numeroIdentidadRecibe != "" && form.fechaOficio != null && form.fechaOficio != ""
            && form.nombreRecibe != null && form.nombreRecibe != "" && form.cargoRecibe != null && form.cargoRecibe != "")
        {
            if (form.observacion == "/n") {
                form.observacion == null;
            }
            $.ajax({
                    url: '@Url.Action("AgregarNotificacion", "SolicitudProrroga")',
                    type: 'POST',
                    async: true,
                    cache: false,
                    data: { values: form, fechaOficio: DateTime(form.fechaOficio), fechaNotificacion: DateTime(form.fechaNotificacion), fechaRecepcion: DateTime(form.fechaRecepcion) },
                    success: function (response) {
                        OcultarPanelLoad();
                        Alert("La notificación se ha guardado exitosamente", "success");
                    },
                    error: function (error) {
                        OcultarPanelLoad();
                        Alert(error.statusText, "Error al guardar la notificación");
                    }
                });
        }
        else {
            OcultarPanelLoad();
            Alert('Debe llenar todos los campos !! ', "error");
        }
    }
</script>