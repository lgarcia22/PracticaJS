@{
    ViewBag.Title = "Verificar Cuenta";
    Layout = "_Layout.cshtml";

    var Error = TempData["ErrorVerificarCodigo"];
}

@using DataEntityLayer.Models;
@using reCAPTCHA.MVC

<div class="container" style="margin-top: 30px;">
    <div class="row d-flex justify-content-center">
        <div style="width: 100%; max-width: 305px; margin: auto;">
            <div class="sidebar-logo" style="border-left: 1px solid #e6ecf5; border-top: 1px solid #e6ecf5;">
                <div class="peers ai-c fxw-nw">
                    <div class="peer peer-greed">
                        <a class="sidebar-link td-n" href="/">
                            <div class="peers ai-c fxw-nw">
                                <div class="peer" style="margin-left: 17%;">
                                    <div class="logo">
                                        <img src="~/Content/Image/Logo/logo.jpg" alt="">
                                    </div>
                                </div>
                                <div class="peer peer-greed logo">
                                    <img src="~/Content/Image/Logo/tsc.jpg" alt="">
                                </div>
                            </div>
                        </a>
                    </div>
                </div>
            </div>
            <div class="long-title" style="text-align:center; padding-bottom:10px; margin-top:60px;">
                <h3>Verificar Cuenta</h3>
            </div>
            @using (Html.BeginForm("CV", "Enrolamiento", new { url = ViewBag.rutaEncriptada }, FormMethod.Post, new { @id = "form_codigo_verificacion", @onsubmit = "return miFuncion(this)" }))
            {
                @(Html.DevExtreme().Form<VerificarUsuario>()
                .ID("form_codigo_verificacion")
                .LabelLocation(FormLabelLocation.Top)
                .LabelMode(FormLabelMode.Outside)
                .Items(items =>
                {
                    items.AddSimpleFor(m =>m.codigoVerificacion).Editor(e => e.NumberBox().Mode(DevExtreme.AspNet.Mvc.NumberBoxMode.Number)
                    .Buttons(buttons =>
                    {
                        buttons.Add()
                            .Name("Codigo de Verificación")
                            .Location(TextEditorButtonLocation.After)
                            .Widget(w => w.Button()
                                .Type(ButtonType.Back)
                                .Icon("fa fa-book"));
                    }))
                    .ValidationRules(r => r.AddRequired().Message("Codigo de verificación requerido"));

                    items.AddSimpleFor(m => m.numeroIdentidad).Editor(e => e.TextBox().Mode(DevExtreme.AspNet.Mvc.TextBoxMode.Text)
                    .Buttons(buttons =>
                    {
                        buttons.Add()
                            .Name("Número de Identidad")
                            .Location(TextEditorButtonLocation.After)
                            .Widget(w => w.Button()
                                .Type(ButtonType.Back)
                                .Icon("fa fa-address-card"));
                    }))
                    .ValidationRules(r => r.AddRequired().Message("Número de Identidad requerido")
                    );

                    items.AddSimple().Template(new TemplateName("catchat"));


                    items.AddButton()
                            .HorizontalAlignment(HorizontalAlignment.Right)
                            .ButtonOptions(b => b.Text("Verificar Cuenta").ElementAttr("name", "BtnAcceder")
                            .Type(DevExtreme.AspNet.Mvc.ButtonType.Default)
                            .UseSubmitBehavior(true)
                        );

                })
                .OnContentReady(@<text>
                    function(e) {
                    e.component.validate();
                    }
                </text>)
                .FormData(Model)
                )
            }
        </div>
    </div>
</div>


@using (Html.DevExtreme().NamedTemplate("catchat"))
{
    @(Html.DevExtreme().ScrollView().ID("scrollView").Height("auto").ShowScrollbar(ShowScrollbarMode.Never).Width("auto")
                            .Content(@<text> <div>
                                    @Html.Recaptcha()
                                    @Html.ValidationMessage("ReCaptcha", new { @class = "text-danger" })
                                    <span id="recaptchaMsg" class="text-danger"></span>
                                </div>
                            </text>))

}

<script src="https://www.google.com/recaptcha/api.js"></script>
<script>

    $(document).ready(function ()
    {
        if ('@Error' != "No data")
        {
            Alert('@Error', "error");
        }
    });

    function miFuncion(a) {
        var response = grecaptcha.getResponse();

        if (response.length == 0) {
            $('#recaptchaMsg').text("El Captcha es requerido.");
            return false;
            event.preventDefault();
        }
        else {
            $('#recaptchaMsg').text("");
            return true;
        }
    }

</script>

